---
name: smart-home

# Follow /docs/GETTING_STARTED.md if confused

services:
  # ZWave UI for managing ZWave Devices in Home Assistant
  zwave-js:
    image: zwavejs/zwave-js-ui:latest
    container_name: zwave-js
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    networks:
      docker_ipvlan:
        ipv4_address: "${ZJS_CONTAINER_IP}"
    depends_on:
      - homeassistant
    volumes:
      - "${DOCKER_BASE_DIR}/${ZJS_SUBDIRECTORY}:/usr/src/app/store"
    devices:
      # Mount Z-Wave Stick
      - /dev/ttyUSB-ZStick-5G:/dev/zwave:rwm
    healthcheck:
      test:  wget --no-verbose --tries=1 --spider localhost:8091/health/zwave --header "Accept:text/plain" || exit 1
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 20s
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  homeassistant:
    image: homeassistant/home-assistant:stable   # Latest Production
    # image: homeassistant/home-assistant:rc     # Latest Beta
    # image: homeassistant/home-assistant:x.x.x  # Specific Version
    container_name: homeassistant
    restart: unless-stopped
    networks:
      docker_ipvlan:
        ipv4_address: "${HA_CONTAINER_IP}" # I believe I can remove this / SWAG doesn't support replicas though
    depends_on:
      zwave-js:
        condition: service_healthy
    volumes:
      - "${DOCKER_BASE_DIR}/${HA_SUBDIRECTORY}:/config"
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ="${TIME_ZONE}"
    healthcheck:
      test: ["CMD", "curl", "-f", "${HA_HEALTH_CHECK_URL}"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 10s
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    privileged: true
    #deploy:
    #  mode: replicated
    #  replicas: 2

  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    networks:
      docker_ipvlan:
        ipv4_address: "${NR_CONTAINER_IP}"
    depends_on:
      - homeassistant
    volumes:
      - "${DOCKER_BASE_DIR}/${NR_SUBDIRECTORY}/data:/data"
      - "${DOCKER_BASE_DIR}/${NR_SUBDIRECTORY}/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - FLOWS=1440_flow.json
    healthcheck:
      test: ["CMD", "curl", "-f", "${NR_HEALTH_CHECK_URL}"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 15s
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  esphome:
    image: ghcr.io/esphome/esphome
    container_name: esphome
    restart: unless-stopped
    networks:
      docker_ipvlan:
        ipv4_address: "${ESP_CONTAINER_IP}"
    volumes:
      - "${DOCKER_BASE_DIR}/${ESP_SUBDIRECTORY}/config:/config"
    healthcheck:
      test: ["CMD", "curl", "-f", "${ESP_HEALTH_CHECK_URL}"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 5s
    labels:
      com.centurylinklabs.watchtower.enable: "true"

# IPVLAN3 - defined in home-server-configuration
# If not fix this to your network
networks:
  docker_ipvlan:
    external: true
