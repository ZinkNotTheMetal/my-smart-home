---
# Docker Compose file to create all smart home services
version: "3"

# Follow /docs/GETTING_STARTED.md if confused

services:
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mqtt
    restart: unless-stopped
    networks:
      port-freedom:
        ipv4_address: "${MQTT_CONTAINER_IP}"
    volumes:
      - "${DOCKER_BASE_DIR}/${MQTT_SUBDIRECTORY}/data:/mosquitto/data"
      - "${DOCKER_BASE_DIR}/${MQTT_SUBDIRECTORY}/config:/mosquitto/config:rw"
      - "${DOCKER_BASE_DIR}/${MQTT_SUBDIRECTORY}/log:/mosquitto/log"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - PUID=1000
      - PGID=1000

  homeassistant:
    image: homeassistant/home-assistant:stable   # Latest Production
    # image: homeassistant/home-assistant:rc     # Latest Beta
    # image: homeassistant/home-assistant:x.x.x  # Specific Version
    container_name: homeassistant
    restart: unless-stopped
    networks:
      port-freedom:
        ipv4_address: "${HA_CONTAINER_IP}"
    depends_on:
      mqtt:
        condition: service_started
    volumes:
      - "${DOCKER_BASE_DIR}/${HA_SUBDIRECTORY}:/config"
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ="${TIME_ZONE}"
    healthcheck:
      test: ["CMD", "curl", "-f", "${HA_CONTAINER_URL}"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 15s
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    privileged: true

  zwave-js:
    image: zwavejs/zwave-js-ui:latest
    container_name: zwave-js
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    networks:
      port-freedom:
        ipv4_address: "${ZJS_CONTAINER_IP}"
    volumes:
      - "${DOCKER_BASE_DIR}/${ZJS_SUBDIRECTORY}:/usr/src/app/store"

    depends_on:
      - homeassistant
    devices:
      - /dev/ttyUSB1:/dev/ttyUSB1:rwm
      # Mount Z-Wave Stick
      - /dev/ttyUSB-ZStick-5G:/dev/zwave:rwm

  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    networks:
      port-freedom:
        ipv4_address: "${NR_CONTAINER_IP}"
    depends_on:
      - homeassistant
    volumes:
      - "${DOCKER_BASE_DIR}/${NR_SUBDIRECTORY}:/config"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: ["CMD", "curl", "-f", "${NR_CONTAINER_URL}"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 15s

  esphome:
    image: ghcr.io/esphome/esphome
    container_name: esphome
    restart: unless-stopped
    networks:
      port-freedom:
        ipv4_address: "${ESP_CONTAINER_IP}"
    volumes:
      - "${DOCKER_BASE_DIR}/${ESP_SUBDIRECTORY}/config:/config"

# If you are using my custom port-freedom
# IPVLAN3 - defined in home-server-configuration
# If not fix this to your network
networks:
  port-freedom:
    external:
      name: port-freedom
